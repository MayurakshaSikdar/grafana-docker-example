version: '3.8'

services:
  # Linux (Ubuntu) container
  linux_container:
    image: ubuntu:latest
    container_name: ubuntu_container_1
    networks:
      - monitoring
    command: tail -f /dev/null
    restart: unless-stopped

  # Linux (Ubuntu) container 2
  linux_container_2:
    image: ubuntu:latest
    container_name: ubuntu_container_2
    networks:
      - monitoring
    command: tail -f /dev/null
    restart: unless-stopped

  # Node Exporter for Linux metrics
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - cadvisor
    restart: unless-stopped

  # CAdvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    devices:
      - "/dev/kmsg:/dev/kmsg"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    ports:
      - "8080:8080"
    networks:
      - monitoring
    restart: unless-stopped

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - monitoring

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana_container
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped

# Networks
networks:
  monitoring:
    driver: bridge

# Volumes
volumes:
  grafana_data:
